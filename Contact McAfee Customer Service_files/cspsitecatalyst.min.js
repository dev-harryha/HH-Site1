var contactUsTag = "";
var language = "";
var asstType = "";
var mvtSkip = "";
var platform = "";
var contactUsproduct = "";
var asstTypeForEvent = "";
var aUser = "";
var wapLocalCode;
var wapPageName;
var idntyprtctType = "";
var idntyprtctTypeForEvent = "";
var renewalSelection = "";
var renewalSelectionTypeForEvent = "";
$(document).ready(function() {
    aUser = isAnonymous()
});

function getTaggingEtitle() {
    var a = document.title;
    if (a != null) {
        if (a.toLowerCase() == "Search".toLowerCase()) {
            a = getURLParameter("mode")
        }
        if(a != null && a.toLowerCase() == "McAfee Customer Service - McAfee Assist".toLowerCase()){
          a = "assist"
        }
        if (a != null && a.toLowerCase().indexOf("McAfee Customer Service".toLowerCase()) > -1) {
            a = "home"
        }
        if (a != null && a.toLowerCase() == "Contact Support".toLowerCase()) {
            a = "contactus"
        }
        if (a != null && a.toLowerCase() == "Troubleshoot & Repair".toLowerCase()) {
            a = "troublerepair"
        }
        if (a != null && (a.toLowerCase().indexOf("Mcafee KB".toLowerCase()) > -1 || a.toLowerCase().indexOf("Antivirus Software".toLowerCase()) > -1)) {
            a = "kc"
        }
        if (a != null && a.toLowerCase() == "Total Satisfaction Promise".toLowerCase()) {
            a = "totalsatisfaction"
        }
        if (a != null) {
            return a.toLowerCase()
        }
    }
}

function setTaggingOnPageLoad(b) {
    if (b != null && isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(getTaggingEtitle());
        if (b != null && (b.toLowerCase().indexOf("inproduct") > -1)) {
            s.eVar1 = s.channel + ":" + s.prop5 + ":" + b;
            s.prop1 = s.channel + ":" + s.prop5 + ":" + b
        }
        s.pageName = s.channel + ":" + s.eVar5 + ":" + b.toLowerCase();
        s.eVar3 = s.pageName;
        s.eVar33 = s.channel + ":" + b.toLowerCase();
        s.prop33 = s.eVar33;
        var a = s.t();
        if (a) {
            document.write(a)
        }
    }
}

function setTaggingOnPageLoadForSFArticles(b) {
    if (b != null && isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(getTaggingEtitle());
        if (b != null && (b.toLowerCase().indexOf("inproduct") > -1)) {
            s.eVar1 = s.channel + ":" + s.prop5 + ":" + b;
            s.prop1 = s.channel + ":" + s.prop5 + ":" + b
        }
        s.pageName = s.channel + ":" + s.eVar5 + ":" + b;
        s.eVar3 = s.pageName;
        s.eVar33 = s.channel + ":" + b;
        s.prop33 = s.eVar33;
        var a = s.t();
        if (a) {
            document.write(a)
        }
    }
}

function setTaggingOnPageLoad1(d, b, checkLoggedInUser, accId) {
    if (d != null && b != null && isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(d, checkLoggedInUser, accId);
        var c = true;
        s.pageName = s.channel + ":" + s.eVar5 + ":" + b.toLowerCase();
        s.eVar3 = s.pageName;
        s.eVar33 = s.channel + ":" + b.toLowerCase();
        s.prop33 = s.eVar33;
        var a = s.t();
        if (a) {
            document.write(a)
        }
    }
}

function handleToolClickEvent(g, b) {
    var d = document.getElementById("T:articleId").innerText;
    var e = document.getElementById("oFaultEventID").innerText;
    var k = document.getElementById("oCspID").innerText;
    var f = document.getElementById("oAffId").innerText;
    var c = document.getElementById("oWssVersion").innerText;
    var j = document.getElementById("oPkgId").innerText;
    var a = document.getElementById("oOsType").innerText;
    var h = "";
    if (e || k) {
        h = "inproduct:" + d
    } else {
        h = d
    }
    if (e || k) {
        var i = "inproduct:" + e + ":" + getCurrentdate() + ":" + k + ":" + f + ":" + c + ":" + j + ":" + a + ":" + d + ":tool-name-" + g + "-clicked";
        setSiteCatalystEvent31(i.toLowerCase())
    }
}

function articlePageStartEvent(c, j, k, d, m, e, b, l, a, f) {
    if (c) {
        var g = "";
        if (d || m) {
            g = "inproduct:" + c
        } else {
            g = c
        }
        if (k) {
            g = g + ":" + k
        }
        articlePageTagLoad(g);
        setSiteCatalystEvent13(c, k);
        if (d || m) {
            var i = "inproduct:" + d + ":" + getCurrentdate() + ":" + m + ":" + e + ":" + b + ":" + l + ":" + a + ":" + c;
            var h = d + ":" + l + ":" + b + ":" + c;
            setSiteCatalystEvent30(i.toLowerCase(), h.toLowerCase(), f ? f.toLowerCase() : "")
        }
    }
}

function setTaggingOnPageLoad1ViewAll(d, b) {
    if (d != null && b != null && isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(d);
        var c = true;
        platform = getCotactUsParameterFromURL("platform");
        assistType = getCotactUsParameterFromURL("aType");
        s.pageName = s.channel + ":" + s.eVar5 + ":" + b.toLowerCase();
        s.eVar3 = s.channel + ":" + s.eVar5 + ":home";
        if (assistType != null && assistType != "") {
            s.eVar3 = s.eVar3 + ":" + assistType
        }
        if (platform != null && platform != "" && (platform == "pc" || platform == "mac" || platform == "mobile")) {
            s.eVar3 = s.eVar3 + ":" + platform
        }
        s.eVar3 = s.eVar3 + ":view-all";
        s.eVar33 = s.channel + ":" + b.toLowerCase();
        s.prop33 = s.eVar33;
        var a = s.t();
        if (a) {
            document.write(a)
        }
    }
}

function setSiteCatalystEvent(b) {
    if (isAnonymousUser() && isConsumption()) {
        var c = b.getSource();
        var d = c.getText();
        var a = c.getProperty("eventName");
        s.linkTrackVars = "events";
        s.linkTrackEvents = a;
        s.events = a;
        s.tl(this, "o", d)
    }
}

function homePageTagLoad() {
    if (isAnonymousUser() && isConsumption()) {
        var a = getTaggingEtitle();
        if (a == "home") {
            setTaggingOnPageLoad1(a, a)
        }
    }
}

function setSiteCatalystEvent1AndEvent10(a) {
    setSiteCatalystEvent1(a)
}

function setSiteCatalystEvent1(b) {
    if (isAnonymousUser() && isConsumption()) {
        var a = b.detail.value;
        s.eVar7 = a;
        s.prop7 = a;
        s.linkTrackVars = "eVar7,prop7,events";
        s.linkTrackEvents = "event1";
        s.events = "event1";
        s.tl(this, "o", "Product Name");
        s.eVar7 = "";
        s.prop7 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent2(b) {
    if (isAnonymousUser() && isConsumption()) {
        if (b == "contactus") {
            localStorage.setItem("fromHome", "true")
        }
        if (b == "troublerepair") {
            createCookie("HOME_PAGE_VISITED", "home", 1)
        }
        var c = getTaggingEtitle();
        if (b != null && b != "") {
            var a = b.toLowerCase();
            if (a == "va_aisera_icon" && $("body").hasClass("AiseraDisplay")) {
                b = "va_aisera_icon"
            } else {
                if (a.indexOf("va_") > -1 && $("body").hasClass("AiseraDisplay")) {
                    b = "va_aisera"
                } else {
                    if (a == "va_pcbanner" || a == "va_banner") {
                        b = "va_nohold"
                    }
                }
            }
        }
        ucmContentPagetagLoad(c, b);
        if (b != null && b != "") {
            var a = b.toLowerCase();
            if (a.indexOf("va_ts") > -1) {
                a = a.substring(0, 5)
            }
            s.eVar1 = s.channel + ":" + getOmnitureCurrentLocale() + ":" + a;
            s.prop1 = s.channel + ":" + getOmnitureCurrentLocale() + ":" + a
        }
        s.eVar8 = c;
        s.prop8 = c;
        s.linkTrackVars = "eVar1,prop1,eVar8,prop8,events";
        s.linkTrackEvents = "event2";
        s.events = "event2";
        if(b.includes("login_bar_AR")){
          s.tl(this, "o", "Page Click for AR link");
        }
        else{
          s.tl(this, "o", "Page Click for UCM Content");
        }
        s.eVar8 = "";
        s.prop8 = "";
        resetEvent()
    }
    if (b == "VA_PCBanner") {
        clickIframe = setInterval(checkFocus, 1620000)
    }
}

function ucmContentPagetagLoad(b, a) {
    if (isAnonymousUser() && isConsumption()) {
        var mtitle = b + ":" + a;
        setTaggingOnPageLoad1(b, mtitle)
    }
}

function confirmSRPageTagLoad(c, b) {
    if (isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(c);
        s.pageName = s.channel + ":" + s.eVar5 + ":" + c.toLowerCase() + ":" + b.toLowerCase();
        s.eVar3 = s.pageName;
        s.eVar33 = s.channel + ":" + c.toLowerCase() + ":" + b ? b.toLowerCase() : "";
        s.prop33 = s.eVar33;
        var a = s.t();
        if (a) {
            document.write(a)
        }
    }
}

function platformPageTagLoad(b) {
    if (isAnonymousUser() && isConsumption()) {
        var c = getTaggingEtitle();
        if (b.toLowerCase() == "account or billing") {
            b = "accountbilling"
        }
        var a = c + ":" + b.toLowerCase();
        setTaggingOnPageLoad1(c, a)
    }
}

function browseFacetPageTagLoad(c, e) {
    if (isAnonymousUser() && isConsumption()) {
        var d = getTaggingEtitle();
        if (e == "*" || e == "" || e == null || e == "null") {
            e = "most popular"
        }
        if (c.toLowerCase() == "account or billing") {
            c = "account or billing"
        }
        if (c != null && c != "") {
            var a = d + ":" + c + ":" + e;
            var b = getCotactUsParameterFromURL("fromContactUs");
            if (typeof(b) != "undefined" && b == "true") {
                setTaggingOnPageLoad1ViewAll(d, a)
            } else {
                setTaggingOnPageLoad1(d, a)
            }
        }
    }
}

function productPageTagLoad(d, c, f) {
    if (isAnonymousUser() && isConsumption()) {
        var e = getTaggingEtitle();
        if (d.toLowerCase() == "account or billing") {
            d = "account or billing"
        }
        if (f == "*" || f == "" || f == null || f == "null") {
            f = "most popular"
        }
        if (d != null && d != "" && c != null && c != "") {
            var a = e + ":" + d + ":" + c + ":" + f;
            var b = getCotactUsParameterFromURL("fromContactUs");
            if (typeof(b) != "undefined" && b == "true") {
                setTaggingOnPageLoad1ViewAll(e, a)
            } else {
                setTaggingOnPageLoad1(e, a)
            }
        }
    }
}

function componentPageTagLoad(d, c, b, f) {
    if (isAnonymousUser() && isConsumption()) {
        var e = getTaggingEtitle();
        if (d.toLowerCase() == "account or billing") {
            d = "account or billing"
        }
        if (f == "*" || f == "" || f == null || f == "null") {
            f = "most popular"
        }
        if (d != null && d != "" && c != null && c != "" && b != null && b != "") {
            var a = e + ":" + d + ":" + c + ":" + b + ":" + f;
            setTaggingOnPageLoad1(e, a)
        }
    }
}

function setSiteCatalystEvent3(a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar9 = a;
        s.prop9 = a;
        platform = a;
        s.linkTrackVars = "eVar9,prop9,events";
        s.linkTrackEvents = "event3";
        s.events = "event3";
        s.tl(this, "o", "Platform Selection");
        s.eVar9 = "";
        s.prop9 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent6(a, c) {
    if (isAnonymousUser() && isConsumption()) {
        var b = a + ":" + c;
        s.eVar13 = b;
        s.prop13 = b;
        s.linkTrackVars = "eVar13,prop13,events";
        s.linkTrackEvents = "event6";
        s.events = "event6";
        s.tl(this, "o", "When user clicks on an article in search page");
        s.eVar13 = "";
        s.prop13 = "";
        resetEvent()
    }
}

function searchPageTagLoad(a) {
    if (isAnonymousUser() && isConsumption()) {
        setTaggingOnPageLoad(a)
    }
}
String.prototype.replaceAll = function(b, a) {
    if (a === undefined) {
        return this.toString()
    }
    return this.split(b).join(a)
};

function setSiteCatalystEvent5and8(a, d, c, b, st, l) {
    b = decodeURIComponent(b);
    a = decodeURIComponent(a);
    if (isAnonymousUser() && isConsumption()) {
        if (b != "null" && b != null && b != "NaN" && b != "") {
            s.eVar18 = b;
            s.prop18 = b;
            s.eVar11 = b;
            s.prop11 = b;
            s.eVar12 = "Consumer Search";
            s.prop12 = "Consumer Search";
            s.eVar16 = d + " | Success | " + st + " | " + l;
            s.prop16 = d + " | Success | " + st + " | " + l;
            s.eVar17 = c;
            s.prop17 = c;
            s.linkTrackVars = "eVar11,eVar12,eVar16,eVar17,prop11,prop12,prop16,prop17,eVar18,prop18,events";
            s.linkTrackEvents = "event5,event8";
            s.events = "event5,event8";
            s.tl(this, "o", "When user tries to search and auto Suggest Term");
            s.eVar18 = "";
            s.prop18 = "";
            s.eVar11 = "";
            s.prop11 = "";
            s.eVar12 = "";
            s.prop12 = "";
            s.eVar16 = "";
            s.prop16 = "";
            s.eVar17 = "";
            s.prop17 = "";
            resetEvent()
        } else {
            if (a != "null" && a != null && a != "NaN") {
                s.eVar11 = a;
                s.prop11 = a;
                s.eVar12 = "Consumer Search";
                s.prop12 = "Consumer Search";
                s.eVar16 = d + " | Success | " + st + " | " + l;
                s.prop16 = d + " | Success | " + st + " | " + l;
                s.prop17 = c;
                s.linkTrackVars = "eVar11,eVar12,eVar16,eVar17,prop11,prop12,prop16,prop17,events";
                s.linkTrackEvents = "event5";
                s.events = "event5";
                s.tl(this, "o", "When user tries to search");
                s.eVar11 = "";
                s.prop11 = "";
                s.eVar12 = "";
                s.prop12 = "";
                s.eVar16 = "";
                s.prop16 = "";
                s.eVar17 = "";
                s.prop17 = "";
                resetEvent()
            }
        }
    }
}

function setSiteCatalystEvents578(a, d, c, b, st, l) {
    b = decodeURIComponent(b);
    a = decodeURIComponent(a);
    if (isAnonymousUser() && isConsumption()) {
        if (b != "null" && b != null && b != "NaN" && b != "") {
            s.eVar18 = b;
            s.prop18 = b;
            s.eVar11 = b;
            s.prop11 = b;
            s.eVar12 = "Consumer Search";
            s.prop12 = "Consumer Search";
            s.eVar16 = d + " | NoResults | " + st + " | " + l;
            s.prop16 = d + " | NoResults | " + st + " | " + l;
            s.eVar17 = c;
            s.prop17 = c;
            s.eVar14 = a;
            s.prop14 = a;
            s.eVar15 = "No Results from Search";
            s.prop15 = "No Results from Search";
            s.linkTrackVars = "eVar11,eVar12,eVar16,eVar17,prop11,prop12,prop16,prop17,eVar18,prop18,eVar14,prop14,eVar15,prop15,events";
            s.linkTrackEvents = "event5,event7,event8";
            s.events = "event5,event7,event8";
            s.tl(this, "o", "no results capture the search term and instance");
            s.eVar18 = "";
            s.prop18 = "";
            s.eVar11 = "";
            s.prop11 = "";
            s.eVar12 = "";
            s.prop12 = "";
            s.eVar16 = "";
            s.prop16 = "";
            s.eVar17 = "";
            s.prop17 = "";
            s.eVar14 = "";
            s.prop14 = "";
            s.eVar15 = "";
            s.prop15 = "";
            resetEvent()
        } else {
            if (a != "null" && a != null && a != "NaN") {
                s.eVar11 = a;
                s.prop11 = a;
                s.eVar12 = "Consumer Search";
                s.prop12 = "Consumer Search";
                s.eVar16 = d + " | NoResults | " + st + " | " + l;
                s.prop16 = d + " | NoResults | " + st + " | " + l;
                s.eVar17 = c;
                s.prop17 = c;
                s.eVar14 = a;
                s.prop14 = a;
                s.eVar15 = "No Results from Search";
                s.prop15 = "No Results from Search";
                s.linkTrackVars = "eVar11,eVar12,eVar16,eVar17,prop11,prop12,prop16,prop17,eVar14,eVar15,prop14,prop15,events";
                s.linkTrackEvents = "event5,event7";
                s.events = "event5,event7";
                s.tl(this, "o", "no results capture the search term and instance");
                s.eVar11 = "";
                s.prop11 = "";
                s.eVar12 = "";
                s.prop12 = "";
                s.eVar16 = "";
                s.prop16 = "";
                s.eVar17 = "";
                s.prop17 = "";
                s.eVar14 = "";
                s.prop14 = "";
                s.eVar15 = "";
                s.prop15 = "";
                resetEvent()
            }
        }
    }
}

function setSiteCatalystEventsError578(a, d, c, b, st, l) {
    b = decodeURIComponent(b);
    a = decodeURIComponent(a);
    if (isAnonymousUser() && isConsumption()) {
        if (b != "null" && b != null && b != "NaN" && b != "") {
            s.eVar18 = b;
            s.prop18 = b;
            s.eVar11 = b;
            s.prop11 = b;
            s.eVar12 = "Consumer Search";
            s.prop12 = "Consumer Search";
            s.eVar16 = d + " | ErrorEncountered | " + st + " | " + l;
            s.prop16 = d + " | ErrorEncountered | " + st + " | " + l;
            s.eVar17 = c;
            s.prop17 = c;
            s.eVar14 = a;
            s.prop14 = a;
            s.eVar15 = "Error encountered in search";
            s.prop15 = "Error encountered in search";
            s.linkTrackVars = "eVar11,eVar12,eVar16,eVar17,prop11,prop12,prop16,prop17,eVar18,prop18,eVar14,prop14,eVar15,prop15,events";
            s.linkTrackEvents = "event5,event7,event8";
            s.events = "event5,event7,event8";
            s.tl(this, "o", "Error encountered in search");
            s.eVar18 = "";
            s.prop18 = "";
            s.eVar11 = "";
            s.prop11 = "";
            s.eVar12 = "";
            s.prop12 = "";
            s.eVar16 = "";
            s.prop16 = "";
            s.eVar17 = "";
            s.prop17 = "";
            s.eVar14 = "";
            s.prop14 = "";
            s.eVar15 = "";
            s.prop15 = "";
            resetEvent()
        } else {
            if (a != "null" && a != null && a != "NaN") {
                s.eVar11 = a;
                s.prop11 = a;
                s.eVar12 = "Consumer Search";
                s.prop12 = "Consumer Search";
                s.eVar16 = d + " | ErrorEncountered | " + st + " | " + l;
                s.prop16 = d + " | ErrorEncountered | " + st + " | " + l;
                s.eVar17 = c;
                s.prop17 = c;
                s.eVar14 = a;
                s.prop14 = a;
                s.eVar15 = "Error encountered in search";
                s.prop15 = "Error encountered in search";
                s.linkTrackVars = "eVar11,eVar12,eVar16,eVar17,prop11,prop12,prop16,prop17,eVar14,eVar15,prop14,prop15,events";
                s.linkTrackEvents = "event5,event7";
                s.events = "event5,event7";
                s.tl(this, "o", "Error encountered in search");
                s.eVar11 = "";
                s.prop11 = "";
                s.eVar12 = "";
                s.prop12 = "";
                s.eVar16 = "";
                s.prop16 = "";
                s.eVar17 = "";
                s.prop17 = "";
                s.eVar14 = "";
                s.prop14 = "";
                s.eVar15 = "";
                s.prop15 = "";
                resetEvent()
            }
        }
    }
}

function articlePageTagLoad(a) {
    if (isAnonymousUser() && isConsumption()) {
        var b = "kc:" + a;
        //setTaggingOnPageLoad(b)
        setTaggingOnPageLoadForSFArticles(b);
    }
}

function setSiteCatalystEvent13(a, b) {
    if (isAnonymousUser() && isConsumption()) {
        var c = a + ":" + b;
        s.eVar31 = c;
        s.prop31 = c;
        s.linkTrackVars = "pageName,eVar31,prop31,events";
        s.linkTrackEvents = "event13";
        s.events = "event13";
        s.tl(this, "o", "Article loaded");
        s.eVar31 = "";
        s.prop31 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent14(d) {
    if (isAnonymousUser() && isConsumption()) {
        var e = d.getSource();
        var b = e.getProperty("articleId");
        var a = e.getProperty("variable");
        if (b != "undefined" || b != "" || b != null) {
            var c = e.getText();
            if (a == "evar24") {
                setCookie("articleIdQ2" + b, b, -1);
                s.eVar24 = b + ":" + getOmnitureCurrentLocale() + ":" + c;
                s.prop24 = b + ":" + getOmnitureCurrentLocale() + ":" + c;
                s.linkTrackVars = "eVar24,prop24,events"
            } else {
                s.eVar25 = b + ":" + getOmnitureCurrentLocale() + ":" + c + " Comments Entered";
                s.prop25 = b + ":" + getOmnitureCurrentLocale() + ":" + c + " Comments Entered";
                s.linkTrackVars = "eVar25,prop25,events"
            }
            s.linkTrackEvents = "event14";
            s.events = "event14";
            s.tl(this, "o", "Did this resolve your issue");
            s.eVar24 = "";
            s.prop24 = "";
            s.eVar25 = "";
            s.prop25 = "";
            resetEvent()
        }
    }
}

function setSiteCatalystEvent15(a) {
    if (isAnonymousUser() && isConsumption()) {
        var b = getOmnitureCurrentLocale() + ":" + a;
        s.eVar26 = b.toLowerCase();
        s.prop26 = b.toLowerCase();
        s.linkTrackVars = "eVar26,prop26,events";
        s.linkTrackEvents = "event15";
        s.events = "event15";
        s.tl(this, "o", "Language list in article view");
        s.eVar26 = "";
        s.prop26 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent9() {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar20 = asstTypeForEvent;
        s.prop20 = asstTypeForEvent;
        s.linkTrackVars = "eVar20,prop20,events";
        s.linkTrackEvents = "event9";
        s.events = "event9";
        s.tl(this, "o", "How can we assist you");
        s.eVar20 = "";
        s.prop20 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent10() {
    if (isAnonymousUser() && isConsumption()) {
        var a = contactUsproduct;
        if (platform != null && platform != "" && a != null && a != "") {
            s.eVar21 = platform + ":" + a;
            s.prop21 = platform + ":" + a;
            s.linkTrackVars = "eVar21,prop21,events";
            s.linkTrackEvents = "event10";
            s.events = "event10";
            s.tl(this, "o", "Contact Us - Product and Platform selected");
            s.eVar21 = "";
            s.prop21 = "";
            resetEvent()
        }
    }
}

function setSiteCatalystEvent11() {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar22 = "Skip MVT";
        s.prop22 = "Skip MVT";
        s.linkTrackVars = "eVar22,prop22,events";
        s.linkTrackEvents = "event11";
        s.events = "event11";
        s.tl(this, "o", "MVT Option Selected");
        s.eVar22 = "";
        s.prop22 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent12(b, a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar23 = a;
        s.prop23 = a;
        s.linkTrackVars = "eVar23,prop23,events";
        s.linkTrackEvents = "event12";
        s.events = "event12";
        s.tl(this, "o", "Contact Option Selected");
        s.eVar23 = "";
        s.prop23 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent12AutoTrigger(a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar23 = a;
        s.prop23 = a;
        s.linkTrackVars = "eVar23,prop23,events";
        s.linkTrackEvents = "event12";
        s.events = "event12";
        s.tl(this, "o", "Contact Option Selected");
        s.eVar23 = "";
        s.prop23 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent17(b, a, d) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar28 = b;
        s.prop28 = b;
        var c = a + ":" + d + ":" + b;
        s.eVar36 = s.channel + ":" + c.toLowerCase();
        s.prop36 = s.channel + ":" + c.toLowerCase();
        s.linkTrackVars = "eVar28,prop28,eVar36,prop36,events";
        s.linkTrackEvents = "event17";
        s.events = "event17";
        s.tl(this, "o", "Type of SR created ");
        s.eVar28 = "";
        s.prop28 = "";
        s.eVar36 = "";
        s.prop28 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent18() {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar29 = "SR Created";
        s.prop29 = "SR Created";   
        s.linkTrackVars = "eVar29,prop29,events";
        s.linkTrackEvents = "event18";
        s.events = "event18"; 
        s.tl(this, "o", "SR created");        
        s.eVar29 = "";
        s.prop29 = "";
        resetEvent()
    }
}
function setSiteCatalystEvent18UpdateSR() {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar29 = "SR Updated";
        s.prop29 = "SR Updated";    
        s.linkTrackVars = "eVar29,prop29,events";
        s.linkTrackEvents = "event18";
        s.events = "event18"; 
        s.tl(this, "o", "SR Updated");      
        s.eVar29 = "";
        s.prop29 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent132(b, c) {
    if (isAnonymousUser() && isConsumption()) {
        var a = b + ":" + c;
        s.prop32 = a;
        s.linkTrackVars = "pageName,prop32,events";
        s.linkTrackEvents = "event20";
        s.events = "event20";
        s.tl(this, "o", "Chat SR is created from home.mcafee.com or CSP");
        s.prop32 = "";
        resetEvent()
    }
}

function searchPageFacetClick(a) {
    if (isAnonymousUser() && isConsumption()) {
        if (a.toLowerCase() == "Knowledge Base".toLowerCase()) {
            sFacetName = a;
            a = "kc"
        } else {
            if (a == "Communities") {
                sFacetName = a;
                a = "communities"
            }
        }
        var b = "Search:" + a + ":" + sFacetName;
        setTaggingOnPageLoad(b)
    }
}

function setSiteCatalystEventSPRLinkClick(c) {
    var b = document.location.href;
    if (isAnonymousUser() && isConsumption()) {
        s.channel = "csp";
        s.eVar5 = getOmnitureCurrentLocale();
        s.prop5 = getOmnitureCurrentLocale();
        s.pageName = s.channel + ":" + s.prop5 + ":spr";
        s.eVar1 = s.channel + ":" + s.prop5 + ":home";
        s.prop1 = s.channel + ":" + s.prop5 + ":home";
        s.eVar2 = b;
        s.prop2 = b;
        s.eVar3 = s.channel + ":" + s.prop5 + ":spr";
        s.eVar4 = getCurrentDayName();
        s.prop4 = getCurrentDayName();
       // s.eVar6 = getUserType();
       // s.prop6 = getUserType();
        s.eVar32 = s.channel;
        s.eVar33 = s.channel + ":spr";
        s.prop33 = s.channel + ":spr";
        var a = s.t();
        if (a) {
            document.write(a)
        }
    }
}

function mobileBrowsePageKCFacetClick(b) {
    if (isAnonymousUser() && isConsumption()) {
        var c = b.getSource();
        var a = c.getProperty("facetname");
        var d = "browse:" + a;
        setTaggingOnPageLoad(d)
    }
}

function searchPageCommunityLinkClick(b) {
    if (isAnonymousUser() && isConsumption()) {
        var d = b.getSource();
        var a = d.getProperty("communityurl");
        var c = getCommunityId(a);
        var e = "Search:community:" + c;
        setTaggingOnPageLoad(e)
    }
}

function getCommunityId(a) {
    if (a.indexOf("polls") != -1) {
        return a.substring(a.indexOf("polls") + 6)
    } else {
        if (a.indexOf("DOC-") != -1) {
            return a.substring(a.indexOf("DOC-"))
        } else {
            if (a.indexOf("#") != -1) {
                return a.substring(a.indexOf("#") + 1)
            } else {
                return ""
            }
        }
    }
}

function setClickOnArticlePageLinks(b) {
    if (isAnonymousUser() && isConsumption()) {
        var c = b.getSource();
        var a = c.getProperty("articleId");
        var e = c.getText();
        var d = "";
        if (e == "Print") {
            d = "kc:print:" + a;
            setTaggingOnPageLoad(d)
        }
        if (e == "") {
            d = "kc:nohold:" + a;
            setTaggingOnPageLoad(d)
        }
    }
}

function contactUsPageTagLoad(a) {
    if (isAnonymousUser() && isConsumption()) {
        var b = localStorage.getItem("fromHome");
        if (b == null) {
            b = "false"
        }
        if (b == "false" || a.includes("inproduct")) {
            setTaggingOnPageLoad1(a, a)
        }
        localStorage.setItem("fromHome", "false")
    }
    $(".anchor-links").hide();
    $(".scroll-nav-header-container").hide()
}

function troubleRepairPageTagLoad(a) {
    if (isAnonymousUser() && isConsumption()) {
        setTaggingOnPageLoad1(a, a)
    }
}

function setSiteCatalystEventForCountryList(c, a) {
    if (isAnonymousUser() && isConsumption()) {
        if (c != null && c != "" && c != "null" && a != "" && a != null) {
            if (c == "en-00") {
                c = "en-My Country is Not Listed"
            }
            if (a == "en-00") {
                a = "en-My Country is Not Listed"
            }
            var b = c + ":" + a;
            s.eVar19 = b.toLowerCase();
            s.prop19 = b.toLowerCase();
            s.linkTrackVars = "eVar19,prop19,events";
            s.linkTrackEvents = "event24";
            s.events = "event24";
            s.tl(this, "o", "Contact Us Change Language");
            s.eVar19 = "";
            s.prop19 = "";
            resetEvent()
        }
    }
}

function platformAndProdSelectPagaTagLoad(c, a, b, e) {
    if (isAnonymousUser() && isConsumption()) {
        language = b;
        if (language == "undefined" || language == "" || language == "null" || language === undefined) {
            language = getCotactUsParameterFromURL("localecode")
        }
        if (platform == "undefined" || platform == "" || platform == null || platform === undefined) {
            platform = getCotactUsParameterFromURL("platform")
        }
        if (contactUsproduct == "undefined" || contactUsproduct == "" || contactUsproduct == null || contactUsproduct === undefined) {
            contactUsproduct = getCotactUsParameterFromURL("product")
        }
        getAssistanceTypeSelected(c);
        var d = "contactus:" + language.toLowerCase() + ":" + asstType + ":" + platform + ":" + contactUsproduct;
        setTaggingOnPageLoad(d)
    }
}

function omnitureAutoDetect(c) {
    if (isAnonymousUser() && isConsumption()) {
        var d = c.getSource();
        var b = d.getProperty("localeSelected");
        setPageLevelVariables(getTaggingEtitle());
        s.channel = "tools";
        s.pageName = s.channel + ":" + s.eVar5 + ":contactus:" + b.toLowerCase() + ":ta:autodetect";
        s.eVar3 = s.pageName;
        s.eVar33 = s.channel + ":contactus:" + b.toLowerCase() + ":ta:autodetect";
        s.prop33 = s.eVar33;
        var a = s.t();
        if (a) {
            document.write(a)
        }
    }
}

function contactMode(b, oTitle, lang) {
    if (isAnonymousUser() && isConsumption()) {
        var a = "";
        if (!(b == "undefined" || b == "" || b == null || b === undefined)) {
          if(oTitle=="contactus_a"){
            if (mvtSkip == "mvtskip") {
                a = oTitle + ":" + language + ":" + asstType + ":" + platform + ":" + contactUsproduct + ":" + mvtSkip + ":" + b;
                setTaggingOnPageLoad(a)
            } else {
                if (asstType == "ta") {
                    a = oTitle + ":" + language + ":" + asstType + ":" + platform + ":" + contactUsproduct + ":" + b
                } else {
                    a = oTitle + ":" + language + ":" + asstType + ":" + b
                }
                setTaggingOnPageLoad(a)
            }
        }
        else if(oTitle=="contactus_b"){
           language = lang;
           if (mvtSkip == "mvtskip") {
                a = oTitle + ":" + language + ":" + contactUsproduct + ":" + mvtSkip + ":" + b;
                setTaggingOnPageLoad(a)
            } else {              
                a = oTitle + ":" + language + ":" + b               
                setTaggingOnPageLoad(a)
            }
        }
        }
    }
}

function communityLinkPageTagLoad(d) {
    if (isAnonymousUser() && isConsumption()) {
        var b = d.getSource();
        var c = b.getProperty("option");
        var a = "";
        if (!(c == "undefined" || c == "" || c == null || c === undefined)) {
            if (asstType == "ta") {
                a = "contactus:" + language + ":" + asstType + ":" + platform + ":" + contactUsproduct + ":" + c + ":communitylink"
            } else {
                a = "contactus:" + language + ":" + asstType + ":" + c + ":communitylink"
            }
            setTaggingOnPageLoad(a)
        }
    }
}

function contactModeAutoTrigger(b) {
    if (isAnonymousUser() && isConsumption()) {
        var a = "";
        if (!(b == "undefined" || b == "" || b == null || b === undefined)) {
            if (mvtSkip == "mvtskip") {
                a = "contactus_a:" + language + ":" + asstType + ":" + platform + ":" + contactUsproduct + ":" + mvtSkip + ":" + b;
                setTaggingOnPageLoad(a)
            } else {
                if (asstType == "ta") {
                    a = "contactus_a:" + language + ":" + asstType + ":" + platform + ":" + contactUsproduct + ":" + b
                } else {
                    a = "contactus_a:" + language + ":" + asstType + ":" + b
                }
                setTaggingOnPageLoad(a)
            }
        }
    }
}

function omnitureAssist(a) {
    console.log("inside omnitureAssist isAnonymousUser " + isAnonymousUser());
    console.log("inside omnitureAssist isAnonymousUser " + isConsumption());
    if (isAnonymousUser() && isConsumption()) {
        getAssistanceTypeSelected(a);
        setSiteCatalystEvent9()
    }
}

function skipMvtOmniture(a) {
    if (isAnonymousUser() && isConsumption()) {
        mvtSkip = "mvtskip";
        var b = "contactus:" + language + ":" + asstType + ":" + platform + ":" + contactUsproduct + ":" + mvtSkip;
        setTaggingOnPageLoad(b)
    }
}

function contactUsLoad() {
    var a = new Date()
}

function continueClicked(b, c, oTitle, contactOption) {
    if (isAnonymousUser() && isConsumption()) {
        language = c;
        if (language == "undefined" || language == "" || language == "null" || language === undefined) {
            language = getCotactUsParameterFromURL("localecode")
        }
        getAssistanceTypeSelected(b);
        var a = oTitle + ":" + language.toLowerCase() + ":" + asstType;
        if(contactOption)
          a = a + ":" + contactOption;
        setTaggingOnPageLoad(a)
    }
}

function platformChange(a) {
    platform = a
}

function productChange(a) {
    contactUsproduct = a
}

function getAssistanceTypeSelected(a) {
    if (a.toLowerCase() == "techAssist".toLowerCase()) {
        asstType = "ta";
        asstTypeForEvent = "Technical Assistance"
    }
    if (a.toLowerCase() == "refund".toLowerCase()) {
        asstType = "ref";
        asstTypeForEvent = "Purchase and Refund"
    }
    if (a.toLowerCase() == "purchaseRen".toLowerCase()) {
        asstType = "renewal";
        asstTypeForEvent = "Renewal"
    }
    if (a.toLowerCase() == "accInfo".toLowerCase()) {
        asstType = "acc";
        asstTypeForEvent = "Account Information and Other"
    }
    if (a.toLowerCase() == "identityProtect".toLowerCase()) {
        asstType = "identity-protection-service";
        asstTypeForEvent = "Identity Protection Service"
    }
}

function totalSatisfactionPageTagLoad(a) {
    if (isAnonymousUser() && isConsumption()) {
        setTaggingOnPageLoad1(a, a)
    }
}

function totalSatiConfirmPageTagLoad(a) {
    if (isAnonymousUser() && isConsumption()) {
        setTaggingOnPageLoad(a)
    }
}

function omnitureTotalPromise(a) {
    if (isAnonymousUser() && isConsumption()) {
        if (a == "totalsatisfaction") {
            createCookie("HOME_PAGE_VISITED", "home", 1)
        }
        var b = getTaggingEtitle();
        ucmContentPagetagLoad(b, a);
        s.eVar8 = b;
        s.prop8 = b;
        s.linkTrackVars = "eVar8,prop8,events";
        s.linkTrackEvents = "event2";
        s.events = "event2";
        s.tl(this, "o", "Page Click for UCM Content");
        s.eVar8 = "";
        s.prop8 = "";
        resetEvent()
    }
}

function omnitureAutoDetectPC(b) {
    if (isAnonymousUser() && isConsumption()) {
        var c = getTaggingEtitle();
        setPageLevelVariables(c);
        s.channel = "tools";
        s.pageName = s.channel + ":" + s.eVar5 + ":" + c + ":pc:autodetect";
        s.eVar3 = s.pageName;
        s.eVar33 = s.channel + ":" + c + ":pc:autodetect";
        s.prop33 = s.eVar33;
        var a = s.t();
        if (a) {
            document.write(a)
        }
    }
}

function announcementPageTagLoad() {
    if (isAnonymousUser() && isConsumption()) {
        setTaggingOnPageLoad1("announcement", "announcement")
    }
}

function remoteChatPageTagLoad() {
    if (isAnonymousUser() && isConsumption()) {
        setTaggingOnPageLoad1("remotechat", "remotechat")
    }
}

function omnitureContinueRChatPageTag() {
    if (isAnonymousUser() && isConsumption()) {
        setTaggingOnPageLoad1("remotechat", "remotechat:startchat")
    }
}

function omnitureStartChatPageTag(a) {
    if (isAnonymousUser() && isConsumption()) {
        setTaggingOnPageLoad(a)
    }
}

function setPageLevelVariables(c, checkLoggedInUser, accId) {
    var a = window.location.href;
    if (a.indexOf("?") > -1) {
        a = a.substr(0, a.indexOf("?"))
    }
    var b = true;
    s.channel = "csp";
    s.eVar32 = s.channel;
    s.eVar2 = a;
    s.prop2 = a;
    s.eVar4 = getCurrentDayName();
    s.prop4 = getCurrentDayName();
    s.eVar5 = getOmnitureCurrentLocale();
    s.prop5 = getOmnitureCurrentLocale();
   if (checkLoggedInUser != "" && checkLoggedInUser != undefined){
      s.eVar6 = checkLoggedIn(checkLoggedInUser, accId);
      s.prop6 = checkLoggedIn(checkLoggedInUser, accId);
    }
    s.eVar1 = s.channel + ":" + s.prop5 + ":" + c;
    s.prop1 = s.channel + ":" + s.prop5 + ":" + c
}

function getCurrentDayName() {
    var c = new Date();
    var b = new Array(7);
    b[0] = "Sunday";
    b[1] = "Monday";
    b[2] = "Tuesday";
    b[3] = "Wednesday";
    b[4] = "Thursday";
    b[5] = "Friday";
    b[6] = "Saturday";
    var a = b[c.getDay()];
    return a
}

function getDayType() {
    var c = new Date();
    var b = c.getDay();
    var a;
    if (b == "0" || b == "6") {
        a = "Weekend"
    } else {
        a = "Weekday"
    }
    return a
}

function getCurrentdate() {
    var b = new Date();
    var a = b.getDate();
    var c = b.getMonth() + 1;
    var d = b.getFullYear();
    if (a < 10) {
        a = "0" + a
    }
    if (c < 10) {
        c = "0" + c
    }
    b = c + "/" + a + "/" + d;
    return b
}

function getCurrentTime() {
    var c = new Date();
    var a = c.getHours();
    var b = c.getMinutes();
    if (b < 10) {
        b = "0" + b
    }
    c = a + ":" + b;
    return c
}

function getOmnitureCurrentLocale() {
    var currLocale = getCookie("csp_user_locale");
    $("#currentLocale").val(currLocale);
    var a = "";
    if (document.getElementById("currentLocale")) {
        a = document.getElementById("currentLocale").value
    }
    a = (a != "" && a != null) ? a.toLowerCase() : "en-us";
    return a
}

function getUserType() {
    var a = "";
    if (document.getElementById("T:userType")) {
        a = document.getElementById("T:userType").value
    }
    a = (a != "") ? a.toLowerCase() : "";
    return a
}

function isAnonymousUser() {
    if (aUser == "") {
        return isAnonymous()
    } else {
        return aUser
    }
}

function isAnonymous() {
    if (getUserType().toLowerCase() == "anonymous") {
        return true
    } else {
        return false
    }
}

function isConsumption() {
    var a = "";
    if (document.getElementById("T:callOmnitureFlag")) {
        a = document.getElementById("T:callOmnitureFlag").value;
        if (a == "true") {
            a = true
        } else {
            a = false
        }
    } else {
        a = false
    }
    return a
}

function getURLParameter(a) {
    return decodeURIComponent((new RegExp("[?|&]" + a + "=([^&;]+?)(&|#|;|$)").exec(location.search) || [, ""])[1].replace(/\+/g, "%20")) || null
}

function createCookie(c, d, e) {
    if (e) {
        var b = new Date();
        b.setTime(b.getTime() + (e * 24 * 60 * 60 * 1000));
        var a = "; expires=" + b.toGMTString()
    } else {
        var a = ""
    }
    document.cookie = c + "=" + d + a + "; path=/"
}

function resetEvent() {
    s.linkTrackVars = "None";
    s.linkTrackEvent = "None";
    s.events = "";
}

function getCotactUsParameterFromURL(a) {
    var c = window.location.search.substring(1);
    var d = c.split("&");
    for (var b = 0; b < d.length; b++) {
        var e = d[b].split("=");
        if (e[0] == a) {
            return e[1]
        }
    }
}

function setOnRedirectAssist(a) {
    asstType = a
}

function platformAndProductTriggers(b) {
    if (isAnonymousUser() && isConsumption()) {
        var d = b.getSource();
        var f = d.getProperty("platform");
        var c = d.getProperty("productname");
        var e = d.getProperty("assistselected");
        var a = d.getProperty("hiddenselectedlocale");
        platformChange(f);
        productChange(c);
        platformAndProdSelectPagaTagLoad(e, f, a, c)
    }
}

function setSiteCatalystEvent19(a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar34 = "Average Wait Time";
        s.prop34 = "Average Wait Time";
        s.linkTrackVars = "eVar34,prop34,events";
        s.linkTrackEvents = "event19";
        s.events = "event19";
        s.tl(this, "o", "Average Wait Time");
        s.eVar34 = "";
        s.prop34 = "";
        resetEvent()
    }
}

function setAnonymousCosumpPageLoadTag(a) {
    if (isAnonymousUser() && isConsumption()) {
        setTaggingOnPageLoad1(a, a)
    }
}

function setReimburseRequestEvent23(a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar40 = a + ":" + getCurrentdate();
        s.prop40 = a + ":" + getCurrentdate();
        s.linkTrackVars = "eVar40,prop40,events";
        s.linkTrackEvents = "event23";
        s.events = "event23";
        s.tl(this, "o", "Reimburse Request Submit")
    }
}

function setProofofPurchaseEvent21(a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar38 = a + ":" + getCurrentdate();
        s.prop38 = a + ":" + getCurrentdate();
        s.linkTrackVars = "eVar38,prop38,events";
        s.linkTrackEvents = "event21";
        s.events = "event21";
        s.tl(this, "o", "Proof of Purchase Submit");
        s.eVar38 = "";
        s.prop38 = "";
        resetEvent()
    }
}

function setAutoRenewalEvent22(a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar39 = a + ":" + getCurrentdate();
        s.prop39 = a + ":" + getCurrentdate();
        s.linkTrackVars = "eVar39,prop39,events";
        s.linkTrackEvents = "event22";
        s.events = "event22";
        s.tl(this, "o", "Auto-Renewal Form Submit")
    }
}

function omnitureIdnPrtctOpt(a) {
    console.log("inside omnitureIdnPrtctOpt isAnonymousUser " + isAnonymousUser());
    console.log("inside omnitureIdnPrtctOpt isAnonymousUser " + isConsumption());
    if (isAnonymousUser() && isConsumption()) {
        getIdntyPrtctOptionSelected(a);
        setSiteCatalystEvent90()
    }
}

function omnitureRenewalOpt(a) {
    console.log("inside omnitureRenewalOpt isAnonymousUser " + isAnonymousUser());
    console.log("inside omnitureRenewalOpt isAnonymousUser " + isConsumption());
    if (isAnonymousUser() && isConsumption()) {
        getRenewalOptionSelected(a);
        setSiteCatalystEvent91()
    }
}

function getRenewalOptionSelected(a) {
    if (a.toLowerCase() == "yes".toLowerCase()) {
        renewalSelection = "autoRenewal";
        renewalSelectionTypeForEvent = "renewal-onoff"
    }
    if (a.toLowerCase() == "no".toLowerCase()) {
        renewalSelection = "autoRenewalQuestion";
        renewalSelectionTypeForEvent = "renewal-q&i"
    }
}

function getIdntyPrtctOptionSelected(a) {
    if (a.toLowerCase() == "idntytft".toLowerCase()) {
        idntyprtctType = "it";
        idntyprtctTypeForEvent = "Identity Theft"
    }
    if (a.toLowerCase() == "ltwlt".toLowerCase()) {
        idntyprtctType = "lw";
        idntyprtctTypeForEvent = "Lost Wallet"
    }
    if (a.toLowerCase() == "man".toLowerCase()) {
        idntyprtctType = "man";
        idntyprtctTypeForEvent = "Monitoring Alert/Notification"
    }
    if (a.toLowerCase() == "myacc".toLowerCase()) {
        idntyprtctType = "myac";
        idntyprtctTypeForEvent = "My Account"
    }
    if (a.toLowerCase() == "enrol".toLowerCase()) {
        idntyprtctType = "enr";
        idntyprtctTypeForEvent = "Enrollment"
    }
    if (a.toLowerCase() == "other".toLowerCase()) {
        idntyprtctType = "oth";
        idntyprtctTypeForEvent = "Other"
    }
}

function setSiteCatalystEvent90() {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar41 = idntyprtctTypeForEvent;
        s.prop41 = idntyprtctTypeForEvent;
        s.linkTrackVars = "eVar41,prop41,events";
        s.linkTrackEvents = "event24";
        s.events = "event24";
        s.tl(this, "o", "What do you need help with?");
        s.eVar41 = "";
        s.prop41 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent91() {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar41 = renewalSelectionTypeForEvent;
        s.prop41 = renewalSelectionTypeForEvent;
        s.linkTrackVars = "eVar41,prop41,events";
        s.linkTrackEvents = "event24";
        s.events = "event24";
        s.tl(this, "o", "What do you need help with?");
        s.eVar41 = "";
        s.prop41 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent25() {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar42 = idntyprtctTypeForEvent;
        s.prop42 = idntyprtctTypeForEvent;
        s.linkTrackVars = "eVar42,prop42,events";
        s.linkTrackEvents = "event25";
        s.events = "event25";
        s.tl(this, "o", "IDTP Mobile Call");
        s.eVar42 = "";
        s.prop42 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent29(a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar41 = "IDTPOptOutForm:" + a;
        s.prop41 = "IDTPOptOutForm:" + a;
        s.linkTrackVars = "eVar41,prop41,events";
        s.linkTrackEvents = "event29";
        s.events = "event29";
        s.tl(this, "o", "IDTP OptOut Form");
        s.eVar41 = "";
        s.prop41 = "";
        resetEvent()
    }
}

function socialNetworkAnalytics(b) {
    if (isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(getTaggingEtitle());
        s.eVar1 = s.channel + ":" + getOmnitureCurrentLocale() + ":contactus";
        s.prop1 = s.channel + ":" + getOmnitureCurrentLocale() + ":contactus";
        s.pageName = s.channel + ":" + s.eVar5 + ":social:" + b.toLowerCase();
        s.eVar3 = s.pageName;
        s.eVar33 = s.channel + ":social:" + b.toLowerCase();
        s.prop33 = s.eVar33;
        s.linkTrackVars = "eVar33,prop33,events";
        var a = s.t();
        if (a) {
            document.write(a)
        }
        s.eVar33 = "";
        s.prop33 = "";
        s.eVar1 = "";
        s.prop1 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent30(c, b, a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar44 = c.toLowerCase();
        s.eVar49 = b.toLowerCase();
        s.eVar50 = a.toLowerCase();
        s.prop44 = c.toLowerCase();
        s.linkTrackVars = "eVar44,eVar49,eVar50,prop44,events";
        s.linkTrackEvents = "event30";
        s.events = "event30";
        s.tl(this, "o", "User lands on KB Article View via  inproduct experience")
    }
}

function setSiteCatalystEvent31(g) {
    if (isAnonymousUser() && isConsumption()) {
        var b = "";
        if (document.getElementById("T:articleId")) {
            b = document.getElementById("T:articleId").innerText
        }
        s.eVar45 = g.toLowerCase();
        s.prop45 = g.toLowerCase();
        var f = document.getElementById("oFaultEventID").innerText;
        var a = document.getElementById("oCspID").innerText;
        var d = document.getElementById("oWssVersion").innerText;
        var c = document.getElementById("oPkgId").innerText;
        s.eVar50 = document.getElementById("oCulture").innerText.toLowerCase();
        var e;
        if (f || a) {
            e = f + ":" + c + ":" + d + ":" + b
        }
        s.eVar49 = e.toLowerCase();
        s.linkTrackVars = "eVar45,eVar49,eVar50,prop45,events";
        s.linkTrackEvents = "event31";
        s.events = "event31";
        s.tl(this, "o", "When user clicks on a tool on KB page")
    }
}

function setSiteCatalystEvent32(d, a, c, b) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar46 = d + ":" + getCurrentdate() + ":" + a;
        s.prop46 = d + ":" + getCurrentdate() + ":" + a;
        s.eVar49 = c.toLowerCase();
        s.eVar50 = b.toLowerCase();
        s.linkTrackVars = "eVar46,eVar49,eVar50,prop46,events";
        s.linkTrackEvents = "event32";
        s.events = "event32";
        s.tl(this, "o", "When user creates an SR after visiting the KB page")
    }
}

function setSiteCatalystEvent33(d, a, c, b) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar47 = d + ":" + getCurrentdate() + ":" + a;
        s.prop47 = s.eVar47;
        s.eVar49 = c.toLowerCase();
        s.eVar50 = b.toLowerCase();
        s.linkTrackVars = "eVar47,eVar49,eVar50,prop47,events";
        s.linkTrackEvents = "event33";
        s.events = "event33";
        s.tl(this, "o", "When the user directly lands on Create SR view instead of going via the KB page")
    }
}

function setSiteCatalystEvent34(d, a, c, b) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar48 = d + ":" + getCurrentdate() + ":" + a;
        s.prop48 = s.eVar48;
        s.eVar49 = c.toLowerCase();
        s.eVar50 = b.toLowerCase();
        s.linkTrackVars = "eVar48,eVar49,eVar50,prop48,events";
        s.linkTrackEvents = "event34";
        s.events = "event34";
        s.tl(this, "o", "where the user directly lands on Create SR view instead of going via the KB page and creates an SR")
    }
}

function setSiteCatalystEvent36(a) {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar54 = a.toLowerCase();
        s.prop54 = s.eVar54;
        s.linkTrackVars = "eVar54,prop54,events";
        s.linkTrackEvents = "event36";
        s.events = "event36";
        s.tl(this, "o", "Analytics: chatbot AB")
    }
}

function setSiteCatalystEventSROldError(a) {
    if (isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(getTaggingEtitle());
        s.eVar57 = a + ":error30days";
        s.prop57 = a + ":error30days";
        s.linkTrackVars = "eVar57,prop57,events";
        s.linkTrackEvents = "event41";
        s.events = "event41";
        s.tl(this, "o", "Track number of times error is shown for an SR created more than 30 days");
        s.eVar57 = "";
        s.prop57 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent40SROpen(b, a) {
    if (isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(getTaggingEtitle());
        s.eVar59 = "newsr:" + b + ":existingsrid:" + a;
        s.prop59 = "newsr:" + b + ":existingsrid:" + a;
        s.linkTrackVars = "eVar59,prop59,events";
        s.linkTrackEvents = "event40";
        s.events = "event40";
        s.tl(this, "o", "Number of times a new SR is created after an existing SR has been used in contact flow");
        s.eVar59 = "";
        s.prop59 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent37SROpen(a) {
    if (isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(getTaggingEtitle());
        s.eVar60 = a + ":continue";
        s.prop60 = a + ":continue";
        s.linkTrackVars = "eVar60,prop60,events";
        s.linkTrackEvents = "event37";
        s.events = "event37";
        s.tl(this, "o", "Track Continue clicks");
        s.eVar60 = "";
        s.prop60 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent42SROpen(a) {
    if (isAnonymousUser() && isConsumption()) {
        setPageLevelVariables(getTaggingEtitle());
        s.eVar61 = a + ":signin";
        s.prop61 = a + ":signin";
        s.linkTrackVars = "eVar61,prop61,events";
        s.linkTrackEvents = "event42";
        s.events = "event42";
        s.tl(this, "o", "Track sign-in clicks");
        s.eVar61 = "";
        s.prop61 = "";
        resetEvent()
    }
}

function setSiteCatalystEvent35() {
    if (isAnonymousUser() && isConsumption()) {
        s.eVar56 = "recent sr assistance";
        s.prop56 = "recent sr assistance";
        s.linkTrackVars = "eVar56,prop56,events";
        s.linkTrackEvents = "event35";
        s.events = "event35";
        s.tl(this, "o", "Track  Number of times customers click on Recent SR Assistance");
        s.eVar56 = "";
        s.prop56 = "";
        resetEvent()
    }
};

function omniture_flexicontact(navipath, selection, question, clickvalue, flow) {
    if (isAnonymousUser() && isConsumption()) {
    s.eVar1 = s.channel + ":" + getOmnitureCurrentLocale() + ":home";
    var flow_temp = flow.toLowerCase();
		s.temp = s.channel + ":" + getOmnitureCurrentLocale() + ":contactus_" + flow_temp + ":" + getOmnitureCurrentLocale();
         if(navipath==undefined){
            s.eVar3 = s.temp;
            }
            else{
                s.eVar3 = s.temp + ":"+ navipath;
            }		
		s.eVar5 = getOmnitureCurrentLocale();
    if (clickvalue == "ta") {
        s.eVar20 = "Technical Assistance";
        s.prop20 = "Technical Assistance";
    }
    if (clickvalue == "renewal") {
        s.eVar20 = "Purchase and Renewal";
        s.prop20 = "Purchase and Renewal";
    }
    if (clickvalue == "ref") {
        s.eVar20 = "Refund";
        s.prop20 = "Refund";
    }
    if (clickvalue == "acc") {
        s.eVar20 = "Account Information and Other";
        s.prop20 = "Account Information and Other";
    }
    if (clickvalue == "identity-protection-service") {
        s.eVar20 = "Identity Protection Service";
        s.prop20 = "Identity Protection Service";
    }
    if (clickvalue == "pc" || clickvalue == "mac" || clickvalue == "mobile"){
      s.eVar9 = clickvalue;
    }
    if (clickvalue == "chat" || clickvalue == "phone" || clickvalue == "community"){
        s.eVar23 = clickvalue;
        s.prop23 = clickvalue;
    }
    
   // s.eVar23 = selection;
    if(navipath==undefined){
            s.eVar33 = s.channel + ":contactus_"+ flow_temp + ":" + getOmnitureCurrentLocale();
            s.tl(this, "o", question);
            s.pageName = s.channel + ":" + getOmnitureCurrentLocale() + ":contactus_"+ flow_temp + ":" + getOmnitureCurrentLocale();
        }
        else{        
            s.eVar33 = s.channel + ":contactus_"+ flow_temp + ":" + getOmnitureCurrentLocale()+ ":" + navipath;
            s.tl(this, "o", question);
            s.pageName = s.channel + ":" + getOmnitureCurrentLocale() + ":contactus_"+ flow_temp + ":" + getOmnitureCurrentLocale()+ ":" + navipath;
        }
    	s.prop1 = s.eVar1;		
		s.prop33 = s.eVar33;
		var a = s.t();
    if (a) {
      document.write(a);
    }
    resetEvent()
    }
}

function error_flexicontact(locale, source, trackerror) {
  if (isAnonymousUser() && isConsumption()) {
    var c = new Date();
    s.eVar35 = locale+" | "+ c + " | " + source;
    s.linkTrackVars = "eVar35,events";
    s.linkTrackEvents = "eVar35";
    if (trackerror == "Y"){
    s.events = "event26";
    s.tl(this, "o", "System Error occured while loading Flexicontact");
    }
    var za = s.t();
    if (za) {
        document.write(za);
    }
    resetEvent();
    }
}

function checkLoggedIn(checkLoggedInuser, accountId) {
    console.log("**************Inside checkLoggedIn");
    console.log("checkLoggedInuser=", checkLoggedInuser);
    console.log("AccId=", accountId);
    console.log("**************");
    if (checkLoggedInuser){
      s.eVar6 = "authenticated|"+ accountId;
      s.prop6 = "authenticated|"+ accountId;
    }
    else {
      s.eVar6 = "anonymous";
      s.prop6 = "anonymous";
    }

    resetEvent();
}

function getCookie(e) {
    for (var n = e + "=", t = decodeURIComponent(document.cookie).split(";"), o = 0; o < t.length; o++) {
        for (var r = t[o];
            " " == r.charAt(0);) r = r.substring(1);
        if (0 == r.indexOf(n)) return r.substring(n.length, r.length)
    }
    return ""
}